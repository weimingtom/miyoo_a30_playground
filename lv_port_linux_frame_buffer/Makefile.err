#目标文件名
target = lvgl_demo

#编译工具链
cc := riscv64-unknown-linux-gnu-gcc
#源文件路径
LVGL_DIR ?= ${shell pwd}
LVGL_DIR_NAME ?= lvgl
#链接库的文件路径、头文件路径与要链接的库
CFLAGS ?= -O3 -g0 -I$(LVGL_DIR) -Wall -Wshadow -Wundef -Wmaybe-uninitialized -Wmissing-prototypes -Wno-discarded-qualifiers -Wall -Wextra -Wno-unused-function -Wundef -Wno-error=strict-prototypes -Wpointer-arith -fno-strict-aliasing -Wno-error=cpp -Wuninitialized -Wmaybe-uninitialized -Wno-unused-parameter -Wno-missing-field-initializers -Wtype-limits -Wsizeof-pointer-memaccess -Wno-format-nonliteral -Wno-cast-qual -Wunreachable-code -Wno-switch-default -Wno-switch-enum -Wreturn-type -Wmultichar -Wformat-security -Wno-ignored-qualifiers -Wno-error=pedantic -Wno-sign-compare -Wno-error=missing-prototypes -Wdouble-promotion -Wclobbered -Wdeprecated -Wempty-body -Wtype-limits -Wshift-negative-value -Wstack-usage=1024 -Wno-unused-value -Wno-unused-parameter -Wno-missing-field-initializers -Wuninitialized -Wmaybe-uninitialized -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wtype-limits -Wsizeof-pointer-memaccess -Wno-format-nonliteral -Wpointer-arith -Wno-cast-qual -Wmissing-prototypes -Wunreachable-code -Wno-switch-default -Wswitch-enum -Wreturn-type -Wmultichar -Wno-discarded-qualifiers -Wformat-security -Wno-ignored-qualifiers -Wno-sign-compare

#.o文件存放路径
O_PATH = ./obj

include $(LVGL_DIR)/lvgl/lvgl.mk
include $(LVGL_DIR)/lv_drivers/lv_drivers.mk
include $(LVGL_DIR)/lv_examples/lv_examples.mk

#获取源文件路径下的所有.o文件名
GCC_SOURCE_PATH = $(foreach dir,$(LVGL_DIR),$(wildcard $(dir)/*.c))
GCC_OBJ_PATH = $(patsubst %.c,$(O_PATH)/%.o, $(notdir $(GCC_SOURCE_PATH)))


#生成目标文件
$(target) : $(GCC_OBJ_PATH)
	$(cc) $(GCC_OBJ_PATH) $(CFLAGS) -o $(target)


#将生成的.o文件放到O_PATH目录下
$(O_PATH)/%.o: $(LVGL_DIR)/%.c
	$(cc) -c $(CFLAGS) $< -o $@


#伪目标
.PHONY : clean

clean :
	rm $(GCC_OBJ_PATH)
	rm $(target)

